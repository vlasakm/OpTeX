% This is macro package used by OpTeX, see http://petr.olsak.net/optex

\_codedecl \tikzpicture {TikZ for OpTeX <2022-02-11>}
\_namespace{tikzopm}
\_catcode`\@=11

   \_doc
   This package is \OpTeX/'s compatibility layer for PGF/TikZ. When users do
   `\load[tikz]` they expect `tikz.tex` to be loaded, but this file gets loaded
   instead. It does load `tikz.tex`, but also does fixups.

   First we load TikZ itself.

   \_cod

%tikz.tex
%  pgf.tex
%    pgfrcs.tex
%      pgfutil-common.tex
%      pgfutil-plain.tex
%      pgfrcs.code.tex
%    pgfcore.tex
%      pgfsys.tex
%        pgfsrcs.tex
%        pgfsys.code.tex
%          driver
%      pgfcore.code.tex
%  pgffor.tex
%    pgfrcs.tex
%    pgfkeys.code.tex
%    pgffor.code.tex
%  tikz.code.tex

\def\pgfrcsincluded{}
\input pgfutil-common.tex


% Writing to auxiliary files, customized

\_let\pgfutil@aux@read@hook=\_relax
\_def\pgfutil@writetoaux#1{}


% Colors, unchaged

\def\pgfutil@definecolor#1#2#3{\csname pgfutil@emu@#2\endcsname{#1}#3\@nil}

\def\pgfutil@emu@rgb#1#2,#3,#4\@nil{\expandafter\def\csname\string\color@#1\endcsname{\xcolor@{}{}{rgb}{#2,#3,#4}}}
\def\pgfutil@emu@gray#1#2\@nil{\expandafter\def\csname\string\color@#1\endcsname{\xcolor@{}{}{rgb}{#2,#2,#2}}}
\def\pgfutil@emu@RGB#1#2,#3,#4\@nil{%
    \begingroup
    \pgfmathdivide@{#2}{255}\let\pgfutil@emu@RGB@r\pgfmathresult
    \pgfmathdivide@{#3}{255}\let\pgfutil@emu@RGB@g\pgfmathresult
    \pgfmathdivide@{#4}{255}\let\pgfutil@emu@RGB@b\pgfmathresult
    \edef\pgf@marshal{\def\expandafter\noexpand\csname\string\color@#1\endcsname{%
        \noexpand\xcolor@{}{}{rgb}{\pgfutil@emu@RGB@r,\pgfutil@emu@RGB@g,\pgfutil@emu@RGB@b}}}%
    \expandafter\endgroup\pgf@marshal
}

\pgfutil@definecolor{white}{gray}{1}
\pgfutil@definecolor{black}{gray}{0}
\pgfutil@definecolor{gray}{gray}{0.5}
\pgfutil@definecolor{red}{rgb}{1,0,0}
\pgfutil@definecolor{green}{rgb}{0,1,0}
\pgfutil@definecolor{blue}{rgb}{0,0,1}
\pgfutil@definecolor{cyan}{rgb}{0,1,1}
\pgfutil@definecolor{magenta}{rgb}{1,0,1}
\pgfutil@definecolor{yellow}{rgb}{1,1,0}
\pgfutil@definecolor{orange}{rgb}{1,0.5,0}
\pgfutil@definecolor{violet}{rgb}{0.5,0,0.5}
\pgfutil@definecolor{purple}{rgb}{0.75,0,0.25}
\pgfutil@definecolor{brown}{rgb}{0.75,0.5,0.25}

\def\pgfutil@color#1{%
  \pgfutil@colorlet{.}{#1}%
  \pgfsysprotocol@getcurrentprotocol\pgfutil@emu@temp%
  {%
    \pgfsysprotocol@setcurrentprotocol\pgfutil@empty%
    \pgfsysprotocol@bufferedtrue%
    \pgfsetcolor{.}%
    \expandafter\pgfsys@outerinvoke\expandafter{\pgfsysprotocol@currentprotocol}%
  }%
  \pgfsysprotocol@setcurrentprotocol\pgfutil@emu@temp%
  \aftergroup\pgfutil@reset@color%
}

\def\pgfutil@extractcolorspec#1#2{%
  \def#2{{#1}}%
}

\def\pgfutil@convertcolorspec#1#2#3{%
  \edef#3{\expandafter\expandafter\expandafter\pgfutil@emu@select\csname\string\color@#1\endcsname}%
}

\def\pgfutil@doifcolorelse#1#2#3{%
  \expandafter\ifx\csname\string\color@#1\endcsname\relax%
    \let\pgf@next=\pgfutil@secondoftwo%
  \else
    \let\pgf@next=\pgfutil@firstoftwo%
  \fi%
  \pgf@next{#2}{#3}%
}

\def\pgfutil@reset@color{%
  \pgfsysprotocol@getcurrentprotocol\pgfutil@emu@temp%
  {%
    \pgfsysprotocol@setcurrentprotocol\pgfutil@empty%
    \pgfsysprotocol@bufferedtrue%
    \pgfsetcolor{.}%
    \expandafter\pgfsys@outerinvoke\expandafter{\pgfsysprotocol@currentprotocol}%
  }%
  \pgfsysprotocol@setcurrentprotocol\pgfutil@emu@temp%
}
\expandafter\def\csname\string\color@.\endcsname{\xcolor@{}{}{rgb}{0,0,0}}

\def\pgfutil@colorlet#1#2{%
  \edef\pgf@marshal{#2}%
  \expandafter\pgfutil@in@\expandafter!\expandafter{\pgf@marshal}%
  \ifpgfutil@in@%
    % compute mixture
    {%
      \expandafter\pgfutil@emu@mix\pgf@marshal!white!\@nil%
      \xdef\pgf@marshal{\noexpand\def\expandafter\noexpand\csname\string\color@#1\endcsname{%
          \noexpand\xcolor@{}{}{rgb}{\pgf@sys@tonumber\pgf@xa,\pgf@sys@tonumber\pgf@xb,\pgf@sys@tonumber\pgf@xc}}}%
    }%
    \pgf@marshal%
  \else%
    \edef\pgf@marshal{\noexpand\let\expandafter\noexpand\csname\string\color@#1\endcsname=%
                      \expandafter\noexpand\csname\string\color@#2\endcsname}%
    \pgf@marshal%
  \fi%
}
\def\pgfutil@emu@mix#1!#2!#3!#4\@nil{%
  \expandafter\expandafter\expandafter\pgfutil@emu@unpack\csname\string\color@#1\endcsname%
  \pgf@ya=\pgf@xa%
  \pgf@yb=\pgf@xb%
  \pgf@yc=\pgf@xc%
  \expandafter\expandafter\expandafter\pgfutil@emu@unpack\csname\string\color@#3\endcsname%
  \c@pgf@counta=#2\relax%
  \c@pgf@countb=100\relax%
  \advance\c@pgf@countb by-\c@pgf@counta\relax%
  \pgf@xa=\c@pgf@countb\pgf@xa%
  \advance\pgf@xa by\c@pgf@counta\pgf@ya%
  \divide\pgf@xa by 100\relax%
  \pgf@xb=\c@pgf@countb\pgf@xb%
  \advance\pgf@xb by\c@pgf@counta\pgf@yb%
  \divide\pgf@xb by 100\relax%
  \pgf@xc=\c@pgf@countb\pgf@xc%
  \advance\pgf@xc by\c@pgf@counta\pgf@yc%
  \divide\pgf@xc by 100\relax%
}
\def\pgfutil@emu@unpack#1#2#3#4#5{%
  \pgfutil@emu@@unpack#5\@nil%
}
\def\pgfutil@emu@@unpack#1,#2,#3\@nil{%
  \pgf@xa=#1pt%
  \pgf@xb=#2pt%
  \pgf@xc=#3pt%
}

\def\pgfutil@emu@select#1#2#3#4#5{#5}

\let\definecolor=\pgfutil@definecolor
\let\color=\pgfutil@color
\let\colorlet=\pgfutil@colorlet
\let\extractcolorspec=\pgfutil@extractcolorspec
\let\convertcolorspec=\pgfutil@convertcolorspec

\def\XC@tgt@mod#1{#1}
\def\XC@sdef#1#2{\edef#1{#2}}
\def\XC@mod@cmyk{cmyk}
\def\XC@mod@rgb{rgb}


% pgfutil@minipage, unchanged

\def\pgfutil@minipage[#1]#2{%
  \hbox to#2\bgroup%
    \hsize=#2\relax%
    \vbox\bgroup\noindent%
}
\def\pgfutil@endminipage{\egroup\egroup}


% Driver detection, customized

\def\pgfsysdriver{pgfsys-luatex.def}


% Global colors, unchanged

\let\pgfutil@globalcolorsfalse=\relax
\let\pgfutil@globalcolorstrue=\relax


% Font stuff, unchanged

\def\pgfutil@font@tiny{\fam\zo\fiverm}            % How to do this correctly?
\def\pgfutil@font@scriptsize{\fam\zo\sevenrm}
\def\pgfutil@font@footnotesize{\rm}
\def\pgfutil@font@small{\fam\zo\ninerm}
\def\pgfutil@font@normalsize{\rm}
\def\pgfutil@font@large{\rm}
\def\pgfutil@font@Large{\rm}
\def\pgfutil@font@huge{\rm}
\def\pgfutil@font@Huge{\rm}

\def\pgfutil@font@itshape{\it}
\def\pgfutil@font@bfseries{\bf}

\let\pgfutil@font@normalfont=\rm

\let\pgfutil@selectfont=\rm


% Extra counters, registers, boxes, unchanged

\newcount\pgfutil@tempcnta
\newcount\pgfutil@tempcntb

\newbox\pgfutil@tempboxa

\let\pgfmath@tempdima\pgfutil@tempdima
\let\pgfmath@tempdima\pgfutil@tempdima
\let\pgfmath@tempcnta\pgfutil@tempcnta
\let\pgfmath@tempcntb\pgfutil@tempcntb

% From LaTeX
\newskip\pgfutil@flushglue
\pgfutil@flushglue=0pt plus 1fil


% Module stuff, unchanged

\def\pgfutil@usemodule#1{\input #1.tex}


% End of file stuff, customized

   \_doc
   PGF's `\pgfutil@everybye` hooks into `\end`, but normally \OpTeX/ uses the
   prefixed `\_end`. Here we make it hook into `\_byehook` which should
   hopefully be preserved by all \OpTeX/ macro writers.
   \_cod

\_addto\_byehook{\_the\pgfutil@everybye}


% Link to existing stuff, customized

\let\pgfutil@voidb@x=\voidbox
\toksdef\pgfutil@toks@=0


% The following is still messy and needs to be cleanup up (everything
% prefixed by pgfutil@):, unchanged

%\def\PackageInfo#1#2{}
%\def\PackageWarning#1#2{\immediate\write17{Package #1: Warning! #2.}}%
%\def\PackageError#1#2#3{\immediate\write17{Package #1: Error! #2.}}%
\long\def\AtBeginDocument#1{#1}%

% pgfcalendar uses translations

\def\pgfutil@translate#1{#1} % is there a translator package for plain?

% e-TeX primitives

\let\pgfutil@protected\protected
\let\pgfutil@unexpanded\unexpanded

   \_doc
   Make PGF/TikZ use our PDF resource management. Our functions expect split
   key and value.
   \_cod

\_def\.kvsplit#1/#2 #3\_end{{#2}{#3}}

\_def\pgfutil@addpdfresource@extgs#1{\_addpageresource{ExtGState}\.kvsplit#1\_end}
\_def\pgfutil@addpdfresource@colorspaces#1{\_addpageresource{ColorSpace}\.kvsplit#1\_end}
\_def\pgfutil@addpdfresource@patterns#1{\_addpageresource{Pattern}\.kvsplit#1\_end}
\_let\pgfutil@setuppdfresources=\relax

\_input pgfrcs.code.tex
\ProvidesPackageRCS{pgf.tex}
\_input pgfcore.tex
\usepgfmodule{shapes,plot}
\_input pgffor.tex
\_input tikz.code.tex

   \_doc
   There is a general disagreement about the use/meaning of `\hoffset` and
   `\voffset` -- \LaTeX/, the \LaTeX/ `crop`
   package\fnote{\url{https://www.ctan.org/pkg/crop}}, TikZ, and \OpTeX/ all
   try to use the values differently. Unfortunately this means a broken
   behaviour observed by end users in
   \OpTeX/\fnote{\url{https://github.com/pgf-tikz/pgf/issues/983}}.

   The problem at hand is that PGF nowadays sets the page origin to include
   `\hoffset` and `\voffset`. We instead set it to the origin (i.e. the point
   $(0, 0)$).
   \_cod

\_def\pgf@sys@pdf@mark@pos@pgfpageorigin{\pgfpointorigin}

\_refdecl{%
   \_def\.Xpgfsysmark#1#2#3{\_sdef{pgf@sys@pdf@mark@pos@#1}{\pgfqpoint{#2sp}{#3sp}}}%
}

\_def\pgfsys@markposition#1{%
   \_openref
   \_savepos
   \_edef\.tmp{#1}%
   \_ea\_wref\_ea\.Xpgfsysmark\_ea{\_ea{\.tmp}{\_the\_lastxpos}{\_the\_lastypos}}%
}

% don't worry about reseting catcodes - we are at the end of \opinput'ed file
\_endnamespace
\_endcode
